<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>phpstudy启动mysql成功后停止</title>
      <link href="/2022/04/19/phpstudy%E5%90%AF%E5%8A%A8mysql%E6%88%90%E5%8A%9F%E5%90%8E%E5%81%9C%E6%AD%A2/"/>
      <url>/2022/04/19/phpstudy%E5%90%AF%E5%8A%A8mysql%E6%88%90%E5%8A%9F%E5%90%8E%E5%81%9C%E6%AD%A2/</url>
      
        <content type="html"><![CDATA[<p>今天用phpstudy启动mysql时遇到问题，启动成功后又自动停止，查看日志发现只有一个警告：</p><p><img src="https://typora-img-dai.oss-cn-hangzhou.aliyuncs.com/typora-img/image-20220419173712729.png" alt="image-20220419173712729"></p><p>这是因为之前安装的mysql服务没有删除干净，我的电脑服务里面还存在mysql服务，解决办法：管理员启动cmd输入<code>sc delete mysql</code>：</p><p><img src="https://typora-img-dai.oss-cn-hangzhou.aliyuncs.com/typora-img/image-20220419173930670.png" alt="image-20220419173930670"></p><p>phpstudy再次启动mysql成功…</p>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> phpstudy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test文件</title>
      <link href="/2022/04/17/test%E6%96%87%E4%BB%B6/"/>
      <url>/2022/04/17/test%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>这个文件用于测试给文章添加标签和分类。。。</p>]]></content>
      
      
      <categories>
          
          <category> 自动化测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令</title>
      <link href="/2022/04/16/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/04/16/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="1-操作目录cd"><a href="#1-操作目录cd" class="headerlink" title="1.操作目录cd"></a>1.操作目录cd</h2><p>cd：切换目录</p><p>cd /   #进入到系统根目录</p><p>cd .   #进入到当前目录</p><p>cd ..  #返回上层目录</p><p>cd  /tmp  #进入指定目录/tmp</p><p>cd ~  #进入当前用户的家目录</p><h2 id="2-查看文件ls"><a href="#2-查看文件ls" class="headerlink" title="2.查看文件ls"></a>2.查看文件ls</h2><p>ls：列出当前目录的所有文件、文件夹（目录）信息；</p><p>-l 列出目录或者文件的详细信息。比如权限、修改时间等等； </p><p>-a 列出当前目录下所有文件，包括隐藏文件（已点开头的都是隐藏文件）；</p><p>-A 列出除.和..之外的所有文件； </p><p>-h 列出文件的大小； </p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> /tmp   <span class="hljs-comment"># 显示指定目录/tmp 的内容</span><br><span class="hljs-built_in">ls</span> -l   <span class="hljs-comment"># 列出文件和文件夹的基本属性和详细信息</span><br><br><span class="hljs-built_in">ls</span> -a  <span class="hljs-comment">#列出当前目录的全部内容</span><br><br><span class="hljs-built_in">ls</span> -<span class="hljs-built_in">help</span> <span class="hljs-comment">#列出ls命令的帮助内容</span><br><br><span class="hljs-built_in">ls</span> coco*  <span class="hljs-comment">#列出以coco开头的文件和文件夹</span><br><br>ll  <span class="hljs-comment">#列出文件和文件夹的基本属性和详细信息</span><br></code></pre></td></tr></tbody></table></figure><h2 id="3-列出当前目录的路径pwd"><a href="#3-列出当前目录的路径pwd" class="headerlink" title="3.列出当前目录的路径pwd"></a>3.列出当前目录的路径pwd</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">pwd</span>  <span class="hljs-comment">#显示当前所在目录的路径</span><br></code></pre></td></tr></tbody></table></figure><h2 id="4-查看当前登录用户who"><a href="#4-查看当前登录用户who" class="headerlink" title="4.查看当前登录用户who"></a>4.查看当前登录用户who</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">whoami</span> <span class="hljs-comment">#显示当前用户</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">who</span>  <span class="hljs-comment">#显示当前系统登录用户以及所登录的控制台</span><br></code></pre></td></tr></tbody></table></figure><h2 id="5-复制文件或目录-x2F-文件改名cp"><a href="#5-复制文件或目录-x2F-文件改名cp" class="headerlink" title="5.复制文件或目录/文件改名cp"></a>5.复制文件或目录/文件改名cp</h2><p>cp：复制文件或目录；</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-f</th><th>若目标文件已存在，则会直接覆盖原文件</th></tr></thead><tbody><tr><td>-i</td><td>若目标文件已存在，则会询问是否覆盖</td></tr><tr><td>-p</td><td>保留源文件或目录的所有属性</td></tr><tr><td>-r</td><td>递归复制文件和目录</td></tr><tr><td>-b</td><td>覆盖已存在的文件目标前将目标文件备份</td></tr><tr><td>-a</td><td>等价于“dpr”选项</td></tr></tbody></table><p>-f 强制复制，不提示 ；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> vivi /tmp   <span class="hljs-comment">#复制vivi文件到/tmp 目录下</span><br><br><span class="hljs-built_in">cp</span> /tmp/vivi /home      <span class="hljs-comment">#复制/tmp/vivi 文件到/home 目录下</span><br><br><span class="hljs-built_in">cp</span> -f test1 test2      <span class="hljs-comment"># 将文件test1改名为test2</span><br><br><span class="hljs-built_in">cp</span> -p /tmp/coco /home     <span class="hljs-comment">#复制/tmp/coco到/home目录下并复制文件属性</span><br></code></pre></td></tr></tbody></table></figure><h2 id="6移动文件或目录（改名）mv"><a href="#6移动文件或目录（改名）mv" class="headerlink" title="6移动文件或目录（改名）mv"></a>6移动文件或目录（改名）mv</h2><p>mv：移动文件或目录；</p><p>改名必须满足：目标位置和源位置必须相同才可以，然后文件名必须不同</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-i</th><th>若存在同名文件，则向用户询问是否覆盖</th></tr></thead><tbody><tr><td>-f</td><td>覆盖已有文件时，不进行任何提示</td></tr><tr><td>-b</td><td>当文件存在时，覆盖前为其创建一个备份</td></tr><tr><td>-u</td><td>当源文件比目标文件新，或者目标文件不存在时，才执行移动此操作</td></tr></tbody></table><p><strong>参考实例</strong></p><p>将文件file_1重命名为file_2：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> file_1 file_2<br></code></pre></td></tr></tbody></table></figure><p>将文件file移动到目录dir中 ：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> file /dir<br></code></pre></td></tr></tbody></table></figure><p>将目录dir1移动目录dir2中（前提是目录dir2已存在，若不存在则改名)：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /dir1 /dir2<br></code></pre></td></tr></tbody></table></figure><p>将目录dir1下的文件移动到当前目录下：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /dir1/* .<br></code></pre></td></tr></tbody></table></figure><h2 id="7-在文件中查找关键词grep"><a href="#7-在文件中查找关键词grep" class="headerlink" title="7.在文件中查找关键词grep"></a>7.在文件中查找关键词grep</h2><p>grep：在文件中查找关键词；</p><p>-v 排除内容  </p><p>-E 可以同时实现两条命令的使用，当然也要加|  </p><p>–color=auto 对过滤的字符串加颜色  </p><p>-i 不区分大小写  </p><p>-w 按单词搜索  </p><p>-B 除了显示匹配的一行之外，并显示该行之前的 N 行  </p><p>-A 除了显示匹配的一行之外，并显示该行之后的 N 行  </p><p>-C 除了显示匹配的一行之外，并显示该行之前后各 N 行  </p><p>-i 不区分大小写  </p><p>-o 只显示匹配到的内容  </p><p>-n 显示行号</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">grep “coco” /etc/test    <span class="hljs-comment">#在/etc/test文件中查找关键字“coco”</span><br></code></pre></td></tr></tbody></table></figure><h2 id="8-查找文件find"><a href="#8-查找文件find" class="headerlink" title="8.查找文件find"></a>8.查找文件find</h2><p>find：查找文件；</p><p>语法：find [路径] -name [选项]</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">find <span class="hljs-built_in">test</span>*    <span class="hljs-comment">#在当前目录下查找以test开头的文件</span><br><br>find /etc/test*     <span class="hljs-comment">#在/etc目录中查找以test开头的文件</span><br><br>find /etc/test* -<span class="hljs-built_in">print</span>     <span class="hljs-comment">#在/etc目录中查找以test开头的文件，并显示出来</span><br></code></pre></td></tr></tbody></table></figure><h2 id="9-查看进程ps"><a href="#9-查看进程ps" class="headerlink" title="9.查看进程ps"></a>9.查看进程ps</h2><p>ps：查看进程；</p><p>a 所有与终端相关的进程； </p><p> x 所有与终端无关的进程； </p><p>u 以用户为中心组织进程状态信息显示； </p><p>o 自定义要显示的字段列表，以逗号分隔； </p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">ps -ef    <span class="hljs-comment">#查看进程</span><br>ps -aux &gt; ps.txt   <span class="hljs-comment"># 显示所有进程，并输出到ps.txt文件</span><br><br>ps -ef | grep ssh  <span class="hljs-comment"># 查找特定进程信息</span><br></code></pre></td></tr></tbody></table></figure><h2 id="10-结束进程kill"><a href="#10-结束进程kill" class="headerlink" title="10.结束进程kill"></a>10.结束进程kill</h2><p>kill：结束进程；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">killall 服务名     <span class="hljs-comment">#关闭服务的所有进程 </span><br><span class="hljs-built_in">kill</span> -9 进程号     <span class="hljs-comment">#强制关闭指定进程</span><br><br>killall -9 服务名   <span class="hljs-comment">#强制关闭服务的所有进程</span><br></code></pre></td></tr></tbody></table></figure><h2 id="11-查看文件内容cat"><a href="#11-查看文件内容cat" class="headerlink" title="11.查看文件内容cat"></a>11.查看文件内容cat</h2><p>cat：查看文件内容；</p><p>-n 显示行号； </p><p> -b 只显示非空行的内容（显示行号）； </p><p> -E 在每行结束处显示$  ；</p><p>-s 压缩空行  ；</p><p>-T 把 tab 键字符显示为^I ；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/coco     <span class="hljs-comment">#查看/etc/coco文件</span><br><br><span class="hljs-built_in">cat</span> /etc/coco |more     <span class="hljs-comment">#分屏查看文件内容</span><br><br><span class="hljs-built_in">cat</span> /etc/coco |less    <span class="hljs-comment">#分屏查看文件内容，可上下翻页</span><br></code></pre></td></tr></tbody></table></figure><h2 id="12-打包tar"><a href="#12-打包tar" class="headerlink" title="12.打包tar"></a>12.打包tar</h2><p>tar：打包；</p><p>常见的文件类型为.tar.gz  .tar.bz2  .tgz  .tar.zip </p><p>-c：新建打包文件 </p><p>-f：这个参数后面要接文件名，建议 -f 单独写一个参数 </p><p>-t：查看打包文件 </p><p>-z：通过 gzip 的支持进行压缩和解压缩，此时文件名最好为：.tar.gz</p><p>-x：解压缩打包文件 </p><p>-r:  添加文件到已经压缩的文件</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">tar -xzvf test.tar.gz/unzip test.zip      <span class="hljs-comment">#解压文件</span><br><br>tar -czvf test.tar.gz <span class="hljs-built_in">test</span>/zip -r test.zip <span class="hljs-built_in">test</span>     <span class="hljs-comment">#压缩命令</span><br><br>tar -t -f /tmp/etc.tar.gz        <span class="hljs-comment">#查询</span><br></code></pre></td></tr></tbody></table></figure><h2 id="13-查看ip地址ifconfig"><a href="#13-查看ip地址ifconfig" class="headerlink" title="13.查看ip地址ifconfig"></a>13.查看ip地址ifconfig</h2><p>ifconfig:查看ip地址；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">ifconfig     <span class="hljs-comment">#查看 ip 信息 </span><br><br>ifdown eth0     <span class="hljs-comment">#禁用网卡 </span><br><br>ifup   eth0      <span class="hljs-comment">#启用网卡 </span><br><br>ifconfig eth0 hw ether 00:11:22:33:44:55     <span class="hljs-comment">#修改网卡 eth0 的 MAC 地址</span><br></code></pre></td></tr></tbody></table></figure><h2 id="14-检查网络是否连通ping"><a href="#14-检查网络是否连通ping" class="headerlink" title="14.检查网络是否连通ping"></a>14.检查网络是否连通ping</h2><p>ping:检查网络是否连通；</p><p>-c 指定发送的 ping 包个数  </p><p> -w 指定 ping 命令超时时长  </p><p>-W 一次 ping 操作中，等待对方响应的超时时长  </p><p> -s 指定 ping 包报文大小 </p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">ping www.baidu.com <br></code></pre></td></tr></tbody></table></figure><h2 id="15-创建文件夹mkdir"><a href="#15-创建文件夹mkdir" class="headerlink" title="15.创建文件夹mkdir"></a>15.创建文件夹mkdir</h2><p>mkdir :创建文件夹；</p><p>-p创建层级目录</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ITester    <span class="hljs-comment">#在当前目录下创建ITester子目录</span><br><br><span class="hljs-built_in">mkdir</span> /tmp/ITester_coco   <span class="hljs-comment">#在指定目录/tmp下创建ITester_coco 子目录</span><br><br><span class="hljs-built_in">mkdir</span> -p coco_2/coco_3   <span class="hljs-comment">#在当前目录下创建2级目录coco_2和其子目录coco_3</span><br><br><span class="hljs-built_in">mkdir</span> coco vivi jojo      <span class="hljs-comment">#在当前目录下创建3个目录 coco vivi jojo(以空格分开)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="16-创建空文本文件touch"><a href="#16-创建空文本文件touch" class="headerlink" title="16.创建空文本文件touch"></a>16.创建空文本文件touch</h2><p>touch：创建空文本文件</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> coco      <span class="hljs-comment">#在当前目录下创建coco文件</span><br><br><span class="hljs-built_in">touch</span> /tmp/vivi     <span class="hljs-comment">#在指定目录/tmp下创建vivi文件</span><br></code></pre></td></tr></tbody></table></figure><h2 id="17-删除rm"><a href="#17-删除rm" class="headerlink" title="17.删除rm"></a>17.删除rm</h2><p>rm：删除；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf 文件名：删除文件（递归删除，r:递归，f ：强制）<br><br>rmkdir:删除空目录<br><br><span class="hljs-built_in">rm</span> coco_2020    <span class="hljs-comment">#删除coco_2020文件</span><br><br><span class="hljs-built_in">rm</span> -f ITester2020     <span class="hljs-comment">#直接删除ITester2020文件（无需确认）</span><br><br><span class="hljs-built_in">rm</span> -f coco2021 vivi2021 ITester2021     <span class="hljs-comment">#同时删除多个文件（无需确认）</span><br><br><span class="hljs-built_in">rm</span> /tmp/coco     <span class="hljs-comment">#删除指定目录/tmp下的文件coco</span><br><br><br><span class="hljs-built_in">rm</span> co*    <span class="hljs-comment">#删除以co开头的文件</span><br><br><span class="hljs-built_in">rmdir</span>   <span class="hljs-comment">#删除空目录</span><br><br><span class="hljs-built_in">rm</span> -r coco    <span class="hljs-comment">#递归的方式删除非空目录coco</span><br><br><span class="hljs-built_in">rm</span> -rf vivi    <span class="hljs-comment">#直接删除非空目录vivi(不用确认)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="18-创建文件或编辑vi"><a href="#18-创建文件或编辑vi" class="headerlink" title="18.创建文件或编辑vi"></a>18.创建文件或编辑vi</h2><p>vi:创建文件或编辑；</p><p>(i进入编辑模式，退出编辑按ESC，q表示退出；w表示保存退出；q!表示强制退出；输入:不保存退出q!，保存退出 wq)</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">vi coco    <span class="hljs-comment">#编辑coco文件</span><br><br>vi /tmp/vivi     <span class="hljs-comment">#编辑指定目录/tem下的vivi文件</span><br></code></pre></td></tr></tbody></table></figure><p>:w<br>#保存修改</p><p>:q<br>#退出vi编辑器   </p><p>:wq<br>#保存并退出</p><p>:q!<br>#退出vi编辑器，不保存修改</p><h2 id="19-复制文件或目录cp"><a href="#19-复制文件或目录cp" class="headerlink" title="19.复制文件或目录cp"></a>19.复制文件或目录cp</h2><p>cp：复制文件或目录；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> vivi /tmp     <span class="hljs-comment">#复制vivi文件到/tmp 目录下 </span><br><br><span class="hljs-built_in">cp</span> /tmp/vivi /home     <span class="hljs-comment">#复制/tmp/vivi 文件到/home 目录下</span><br><br><span class="hljs-built_in">cp</span> /home/vivi /tmp/coco      <span class="hljs-comment">#复制/home/vivi 到/tmp 目录下并改名为 coco</span><br><br><span class="hljs-built_in">cp</span> -p /tmp/coco /home     <span class="hljs-comment">#复制/tmp/coco到/home目录下并复制文件属性</span><br></code></pre></td></tr></tbody></table></figure><h2 id="20-移动文件或目录mv"><a href="#20-移动文件或目录mv" class="headerlink" title="20.移动文件或目录mv"></a>20.移动文件或目录mv</h2><p>mv：移动文件或目录；</p><p>改名必须满足：目标位置和源位置必须相同才可以，然后文件名必须不同</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> coco_2020 /tmp   <span class="hljs-comment">#移动coco_2020文件到/tmp 目录下</span><br><br><span class="hljs-built_in">mv</span> /home/coco /tmp      <span class="hljs-comment">#移动/home/coco文件到/tmp目录下</span><br><br><span class="hljs-built_in">mv</span> /home/coco /tmp/ITester      <span class="hljs-comment">#移动/home/coco 文件到/tmp目录下并改名为ITester</span><br><br><span class="hljs-built_in">mv</span> ITester ITester2020        <span class="hljs-comment">#将ITester文件改名为ITester2020</span><br><br><span class="hljs-built_in">mv</span> ITester202003 /tmp     <span class="hljs-comment">#移动目录到/tmp下</span><br><br><span class="hljs-built_in">mv</span> jojo hoho         <span class="hljs-comment">#将jojo目录改名为hoho</span><br></code></pre></td></tr></tbody></table></figure><h2 id="21-查看文件的前几行head"><a href="#21-查看文件的前几行head" class="headerlink" title="21.查看文件的前几行head"></a>21.查看文件的前几行head</h2><p>head:查看文件的前几行</p><p>-n 后面接数字，表示查看前几行（也可以不加， 默认查看 文件前10 行 ） </p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">head</span> -5   <span class="hljs-comment">#查看前5行内容</span><br></code></pre></td></tr></tbody></table></figure><h2 id="22-查看文件的后几行-tail"><a href="#22-查看文件的后几行-tail" class="headerlink" title="22.查看文件的后几行 tail"></a>22.查看文件的后几行 tail</h2><p>tail ：查看文件的后几行 </p><p>-n 后面接数字，表示查看几行（也可以不加， 默认查看文件后10 行 ）  </p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tail</span> -5 /etc/passwd    <span class="hljs-comment">#查看后5行内容</span><br></code></pre></td></tr></tbody></table></figure><h2 id="23-查看当前文档内容less"><a href="#23-查看当前文档内容less" class="headerlink" title="23.查看当前文档内容less"></a>23.查看当前文档内容less</h2><p>less ：查看当前文档内容；</p><p>相比 cat，less 可以实现上下翻页等功能 ；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">less coco.txt   <span class="hljs-comment">#查看coco.txt</span><br></code></pre></td></tr></tbody></table></figure><h2 id="24-分页展示more"><a href="#24-分页展示more" class="headerlink" title="24.分页展示more"></a>24.分页展示more</h2><p>more：分页展示；</p><p>不能回退，灵活上不如 less ；</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash">more coco.txt     <span class="hljs-comment">#分页查看coco.txt</span><br></code></pre></td></tr></tbody></table></figure><h2 id="25-更改目录和文件权限值chmod"><a href="#25-更改目录和文件权限值chmod" class="headerlink" title="25.更改目录和文件权限值chmod"></a>25.更改目录和文件权限值chmod</h2><p>chmod：更改目录和文件权限值</p><p>-R 递归改变目录下所有子目录和文件的权限 </p><p>r=4 w=2 x=1 </p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 766 coco     <span class="hljs-comment">#将目录coco的权限更改为4+2+1 4+2 4+2</span><br><br><span class="hljs-built_in">chmod</span> 777 vivi       <span class="hljs-comment">#将文件vivi的权限更改为 4+2+1 4+2+1 4+2+1</span><br></code></pre></td></tr></tbody></table></figure><h2 id="26-更改文件或目录的属组或属主chown"><a href="#26-更改文件或目录的属组或属主chown" class="headerlink" title="26.更改文件或目录的属组或属主chown"></a>26.更改文件或目录的属组或属主chown</h2><p>chown：更改文件或目录的属组或属主</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> usr coco    <span class="hljs-comment">#将当前目录下的coco目录的属主改为usr</span><br><br><span class="hljs-built_in">chown</span> usr.gur vivi      <span class="hljs-comment">#将当前目录下的vivi目录的属主改为usr，属组改为gur</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
